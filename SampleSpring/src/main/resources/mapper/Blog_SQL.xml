<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="blog">
	<select id="idCheck" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM BLOG_BM
		WHERE BM_ID = #{bmId}
	</select>
	<select id="insertBM" parameterType="hashmap" >
		INSERT INTO BLOG_BM(BM_NO, BM_ID, BM_PW, BM_NM) 
		VALUES(BLOG_SEQ.NEXTVAL, #{bmId}, #{bmPw}, #{bmNm})
	</select>
	<select id="getBM" parameterType="hashmap" resultType="hashmap">
		SELECT BM_NO, BM_NM 
		FROM BLOG_BM
		WHERE DEL_YN = 1
		AND BM_ID = #{bmId}
		AND BM_PW = #{bmPw}	
	</select>
	<!-- 메인리스트 가져오기  -->
	<select id="getBCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT FROM( 
		SELECT B.B_NO, B.B_TITLE,B.B_CON,B.BM_NM,B.B_DT,B.B_HIT,BM.BM_NO FROM(SELECT B.B_NO,B.B_TITLE,B.B_CON,BM.BM_NM,BM.BM_NO,(TO_CHAR( 
		B.B_DT,'YYYY')||'년 '||TO_CHAR( B.B_DT,'MM')||'월 ' ||TO_CHAR( B.B_DT,'DD')||'일 '||TO_CHAR( B.B_DT,'HH')||'시 
		'||TO_CHAR( B.B_DT,'MM')||'분 ') AS B_DT ,B.B_HIT, ROW_NUMBER() OVER(ORDER BY B.B_NO DESC) AS 
		RNUM FROM BLOG_B B INNER JOIN BLOG_BM BM ON B.BM_NO = BM.BM_NO AND BM.DEL_YN = 1 WHERE B.DEL_YN 
		= 1) B INNER JOIN (SELECT * FROM (SELECT RANK() OVER(PARTITION BY BM_NO ORDER BY B_NO DESC) 
		AS RNK ,BM_NO,B_NO FROM BLOG_B B WHERE DEL_YN = 1 GROUP BY BM_NO,B_NO) WHERE RNK =1 ) BM ON 
		B.B_NO = BM.B_NO )
		<if test="searchTxt != null and searchTxt != ''">
			<choose>
				<when test="searchGbn eq 0">
					AND B.B_TITLE LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchGbn eq 1">
					AND BM.BM_NM LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchGbn eq 2">
					AND (B.B_TITLE LIKE '%' || #{searchTxt} || '%'
		    			OR BM.BM_NM LIKE '%' || #{searchTxt} || '%')
				</when>
			</choose>
		</if>
	</select>
	<select id="getBlogCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM BLOG_B B  INNER JOIN BLOG_BM BM
		                ON B.BM_NO = BM.BM_NO
		                AND BM.DEL_YN = 1
		WHERE B.DEL_YN = 1
		AND BM.BM_NO = #{bmno}
		<if test="searchTxt != null and searchTxt != ''">
			<choose>
				<when test="searchGbn eq 0">
					AND B.B_TITLE LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchGbn eq 1">
					AND BM.BM_NM LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchGbn eq 2">
					AND (B.B_TITLE LIKE '%' || #{searchTxt} || '%'
		    			OR BM.BM_NM LIKE '%' || #{searchTxt} || '%')
				</when>
			</choose>
		</if>
	</select>
	<!-- 리스트가져오기 -->
	<select id="getB" parameterType="hashmap" resultType="hashmap">
		SELECT B.B_NO, B.B_TITLE,B.BM_NM,B.B_DT,B.B_HIT
		FROM(   SELECT B.B_NO,B.B_TITLE,BM.BM_NM,(TO_CHAR( B.B_DT,'YYYY')||'년 '||TO_CHAR( B.B_DT,'MM')||'월 '
				||TO_CHAR( B.B_DT,'DD')||'일 '||TO_CHAR( B.B_DT,'HH')||'시 '||TO_CHAR( B.B_DT,'MM')||'분 '||
				TO_CHAR( B.B_DT,'SS')||'초') AS B_DT ,B.B_HIT, ROW_NUMBER() OVER(ORDER BY
		                B.B_NO DESC) AS RNUM
		        FROM BLOG_B B  INNER JOIN BLOG_BM BM 
		                        ON B.BM_NO = BM.BM_NO
		                        AND BM.DEL_YN = 1
		        WHERE B.DEL_YN = 1
		       <if test="searchTxt != null and searchTxt != ''">
			<choose>
				<when test="searchGbn eq 0">
					AND B.B_TITLE LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchGbn eq 1">
					AND BM.BM_NM LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchGbn eq 2">
					AND (B.B_TITLE LIKE '%' || #{searchTxt} || '%'
		    			OR BM.BM_NM LIKE '%' || #{searchTxt} || '%')
				</when>
			</choose>
		</if>
		    )B
		WHERE B.RNUM BETWEEN #{startCnt} AND #{endCnt}
	</select>
	<!-- 블로그 메인 리스트 가져오기  -->
	<select id="getBlog" parameterType="hashmap" resultType="hashmap">
		SELECT B.B_NO, B.B_TITLE,B.B_CON,B.BM_NM,B.B_DT,B.B_HIT,BM.BM_NO
		FROM(SELECT B.B_NO,B.B_TITLE,B.B_CON,BM.BM_NM,BM.BM_NO,(TO_CHAR( B.B_DT,'YYYY')||'년 '||TO_CHAR( B.B_DT,'MM')||'월 '
						||TO_CHAR( B.B_DT,'DD')||'일 '||TO_CHAR( B.B_DT,'HH')||'시 '||TO_CHAR( B.B_DT,'MM')||'분 ') AS B_DT ,B.B_HIT, ROW_NUMBER() OVER(ORDER BY
				                B.B_NO DESC) AS RNUM
		    FROM BLOG_B B INNER JOIN BLOG_BM BM
		                    ON B.BM_NO = BM.BM_NO
		                    AND BM.DEL_YN = 1
		    
		    WHERE B.DEL_YN = 1) B 
		    INNER JOIN (SELECT *
		                FROM (SELECT RANK() OVER(PARTITION BY BM_NO ORDER BY B_NO DESC) AS RNK ,BM_NO,B_NO
		                      FROM BLOG_B B
		                      WHERE DEL_YN = 1
		                      GROUP BY BM_NO,B_NO) 
		                WHERE RNK =1 ) BM ON B.B_NO = BM.B_NO
	</select>
	<!-- 블로그 리스트 가져오기 -->
	<select id="getBlogList" parameterType="hashmap" resultType="hashmap">
		SELECT B.B_NO, B.B_TITLE,B.BM_NM,B.B_DT,B.B_HIT,B.BM_NO,B.B_CON
		FROM(   SELECT B.B_NO,B.B_TITLE,BM.BM_NM,BM.BM_NO,B.B_CON,(TO_CHAR( B.B_DT,'YYYY.MM.DD')) AS B_DT ,B.B_HIT, ROW_NUMBER() OVER(ORDER BY
		                B.B_NO DESC) AS RNUM
		        FROM BLOG_B B  INNER JOIN BLOG_BM BM 
		                        ON B.BM_NO = BM.BM_NO
		                        AND BM.DEL_YN = 1
		        WHERE B.DEL_YN = 1
		     
		       <if test="searchTxt != null and searchTxt != ''">
			<choose>
				<when test="searchGbn eq 0">
					AND B.B_TITLE LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchGbn eq 1">
					AND BM.BM_NM LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchGbn eq 2">
					AND (B.B_TITLE LIKE '%' || #{searchTxt} || '%'
		    			OR BM.BM_NM LIKE '%' || #{searchTxt} || '%')
				</when>
			</choose>
		</if>
		    )B
		WHERE B.RNUM BETWEEN #{startCnt} AND #{endCnt}
		       AND B.BM_NO =  #{bmno}
		ORDER BY B.B_NO
	</select>
	<select id="getAllBCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM BLOG_B B INNER JOIN BLOG_BM BM
		                ON B.BM_NO = BM.BM_NO
		                AND BM.DEL_YN = 1
		WHERE B.DEL_YN = 1
		
		<if test="searchTxt != null and searchTxt != ''">
			<choose>
				<when test="searchGbn eq 0">
					AND B.B_TITLE LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchGbn eq 1">
					AND BM.BM_NM LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchGbn eq 2">
					AND (B.B_TITLE LIKE '%' || #{searchTxt} || '%'
		    			OR BM.BM_NM LIKE '%' || #{searchTxt} || '%')
				</when>
			</choose>
		</if>
	</select>
	<!-- 조회수 -->
	<update id="updateHit" parameterType="hashmap">
		UPDATE BLOG_B SET B_HIT = B_HIT + 1
		WHERE B_NO =  #{no}
	</update>
	<!-- 상세보기 조회 -->
	<select id="getData" parameterType="hashmap" resultType="hashmap">
		 SELECT *
		 FROM ( SELECT B.B_NO, B.B_TITLE, B.B_CON, (TO_CHAR( B.B_DT,'YYYY')||'년 '||TO_CHAR( B.B_DT,'MM')||'월 '
						||TO_CHAR( B.B_DT,'DD')||'일 '||TO_CHAR( B.B_DT,'HH')||'시 '||TO_CHAR( B.B_DT,'MM')||'분 '||
						TO_CHAR( B.B_DT,'SS')||'초') AS B_DT, 
		       		   BM.BM_NM,b.bm_no,B.B_HIT 
				FROM BLOG_B B INNER JOIN BLOG_BM BM ON B.BM_NO = bm.bm_no  
				WHERE B.B_NO = #{no}
		        ORDER BY B.B_NO
		      )
	</select>
	
	<!-- 회원수정 -->
	<update id="updateBMData" parameterType="hashmap">
		UPDATE BLOG_BM SET BM_PW =  #{pwTxt} , BM_NM = #{nmTxt}
		WHERE BM_NO = #{bmno}
	</update>
	<!-- 회원탈퇴 -->
	<update id="deleteBMData" parameterType="hashmap">
		UPDATE BLOG_BM SET DEL_YN = 0
		WHERE BM_NO = #{bmno}
	</update>
	
	<!-- 회원수정 아이디값 가져오기 -->
	<select id="getBMM" parameterType="hashmap" resultType="hashmap">
		SELECT BM_NO,BM_ID, BM_NM 
		FROM BLOG_BM
		WHERE DEL_YN = 1
		AND BM_NO = #{bm_NO}	
	</select>
	<!-- 게시글 등록 -->
	<insert id="insertData" parameterType="hashmap">
		INSERT INTO BLOG_B (B_NO , B_TITLE, B_CON,B_DT,B_HIT,DEL_YN,BM_NO) 
		VALUES(BLOG_SEQ.NEXTVAL, #{title},#{con},SYSDATE,0,1,#{bm_no} ) 
	</insert>
	
	<!-- 회원 카데고리 가져오기 -->
	<select id="getBMCT" parameterType="hashmap" resultType="hashmap">
		SELECT CT.* , BM.BM_NM
		FROM BLOG_CT CT INNER JOIN BLOG_BM BM ON BM.BM_NO = CT.BM_NO 
		WHERE BM.BM_NO = #{bm_NO}
	</select>
</mapper>